name: Build Executables

on:
  workflow_dispatch: # Manual trigger
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            artifact: Speak*.exe
          - os: macos-latest
            platform: mac
            artifact: Speak*.dmg
          - os: ubuntu-latest
            platform: linux
            artifact: Speak*.AppImage

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags for release notes

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install Dependencies
        run: pnpm install

      - name: Generate Icons
        run: pnpm run generate-icons

      - name: Build for ${{ matrix.platform }}
        run: pnpm run build:${{ matrix.platform }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speak-${{ matrix.platform }}
          path: dist-build/${{ matrix.artifact }}
          retention-days: 7

      - name: Generate Release Notes
        if: startsWith(github.ref, 'refs/tags/')
        id: release_notes
        shell: bash
        run: |
          # Get the current tag
          CURRENT_TAG="${GITHUB_REF#refs/tags/}"
          echo "Current tag: $CURRENT_TAG"

          # Get the previous tag
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$' | grep -v "$CURRENT_TAG" | head -n 1)

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, using initial commit"
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi

          echo "Comparing $PREVIOUS_TAG...$CURRENT_TAG"

          # Generate release notes
          cat > release_notes.md <<'EOF'
          ## ðŸ“¦ Installation

          Download the appropriate file for your platform:
          - **Windows**: `Speak.Setup.*.exe`
          - **macOS**: `Speak-*-arm64.dmg`
          - **Linux**: `Speak-*.AppImage`

          ## ðŸ”„ Changes in this Release

          ### Commits
          EOF

          # Add commit messages
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG >> release_notes.md

          echo "" >> release_notes.md
          echo "" >> release_notes.md
          echo "### ðŸ“Š File Changes" >> release_notes.md

          # Add file statistics
          git diff --stat $PREVIOUS_TAG..$CURRENT_TAG >> release_notes.md

          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...$CURRENT_TAG" >> release_notes.md

          # Output for next step
          echo "notes_file=release_notes.md" >> $GITHUB_OUTPUT

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist-build/${{ matrix.artifact }}
          body_path: ${{ steps.release_notes.outputs.notes_file }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
